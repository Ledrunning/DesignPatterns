using System;
using Proxy.Repository;

namespace Proxy
{
    /// <summary>
    ///     Паттерн Заместитель (Proxy) предоставляет объект-заместитель, который управляет доступом к другому объекту.
    ///     То есть создается объект-суррогат, который может выступать в роли другого объекта и замещать его.
    ///     Когда использовать прокси?
    ///     Когда надо осуществлять взаимодействие по сети, а объект-прокси должен имитировать поведения объекта в другом
    ///     адресном пространстве.
    ///     Использование прокси позволяет снизить накладные издержки при передачи данных через сеть.Подобная ситуация еще
    ///     называется удалённый
    ///     заместитель(remote proxies)
    ///     Когда нужно управлять доступом к ресурсу, создание которого требует больших затрат.Реальный объект создается только
    ///     тогда,
    ///     когда он действительно может понадобится, а до этого все запросы к нему обрабатывает прокси-объект.Подобная
    ///     ситуация еще называется виртуальный заместитель (virtual proxies)
    ///     Когда необходимо разграничить доступ к вызываемому объекту в зависимости от прав вызывающего объекта.Подобная
    ///     ситуация еще называется защищающий заместитель(protection proxies)
    ///     Когда нужно вести подсчет ссылок на объект или обеспечить потокобезопасную работу с реальным объектом.Подобная
    ///     ситуация называется "умные ссылки" (smart reference)
    /// </summary>
    internal class Program
    {
        private static void Main(string[] args)
        {
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Title = "Proxy";

            using (IBook book = new BookStoreProxy())
            {
                book.SetData(new Page {Number = 1, Text = "Привет Рулет!"});
                var page1 = book.GetPage(1);
                Console.WriteLine(page1.Text);

                book.SetData(new Page {Number = 2, Text = "Я тебе не рулет!"});

                var page2 = book.GetPage(2);
                Console.WriteLine(page2.Text);

                page1 = book.GetPage(1);
                Console.WriteLine(page1.Text);
            }

            Console.ReadKey();
        }
    }
}