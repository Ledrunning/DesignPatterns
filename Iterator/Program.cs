using System;

namespace Iterator
{
    /// <summary>
    /// Паттерн Итератор (Iterator) предоставляет абстрактный интерфейс для последовательного доступа ко всем элементам составного объекта без раскрытия его внутренней структуры.
    /// Наверное, всем программистам, работающим с языком C#, приходилось иметь дело с циклом foreach, который перебирает объекты в массиве или коллекции.
    /// При этом встроенных классов коллекций существует множество, и каждая из них отличается по своей структуре и поведению.
    /// Ключевым моментом, который позволяет осуществить перебор коллекций с помощью foreach, является применения этими классами коллекций паттерна итератор,
    /// или проще говоря пары интерфейсов IEnumerable / IEnumerator.Интерфейс IEnumerator определяет функционал для перебора внутренних объектов в контейнере:
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Title = "Iterator";

            Library library = new Library();
            Reader reader = new Reader();
            reader.SeeBooks(library);

            Console.ReadKey();
        }
       
    }
}
